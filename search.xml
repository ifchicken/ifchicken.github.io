<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Back-of-the-envelope Estimation</title>
    <url>/SD-estimationNumber.html</url>
    <content><![CDATA[<h3 id="powers-of-two-table">Powers of two table</h3>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Power           Exact Value         Approx Value        Bytes</span><br><span class="line">---------------------------------------------------------------</span><br><span class="line">7                             128</span><br><span class="line">8                             256</span><br><span class="line">10                           1024   1 thousand           1 KB</span><br><span class="line">16                         65,536                       64 KB</span><br><span class="line">20                      1,048,576   1 million            1 MB</span><br><span class="line">30                  1,073,741,824   1 billion            1 GB</span><br><span class="line">32                  4,294,967,296                        4 GB</span><br><span class="line">40              1,099,511,627,776   1 trillion           1 TB</span><br></pre></td></tr></table></figure>
<h1 id="resource">Resource</h1>
<ul>
<li><a href="https://colin-scott.github.io/personal_website/research/interactive_latency.html" target="_blank" rel="noopener">Latency number</a></li>
</ul>
]]></content>
      <categories>
        <category>System Design</category>
      </categories>
  </entry>
  <entry>
    <title>Consistent Hashing</title>
    <url>/SD-consistentHashing.html</url>
    <content><![CDATA[<p>Used for re-sized hash table without moving most of data</p>
<h1 id="resource">Resource</h1>
<ul>
<li><a href="https://blog.csdn.net/sparkliang/article/details/5279393" target="_blank" rel="noopener">ref</a></li>
</ul>
]]></content>
      <categories>
        <category>System Design</category>
      </categories>
  </entry>
  <entry>
    <title>Rate Limiter</title>
    <url>/SD-rateLimiter.html</url>
    <content><![CDATA[<p>Rate limiter could implmented by each API/ each IP/ total region Might save the rule in DB / config file</p>
<h3 id="where-to-implement">Where to implement</h3>
<ol type="1">
<li>server side
<ul>
<li>Fully control</li>
</ul></li>
<li>middleware
<ul>
<li>API gateway</li>
<li>Might be 3rd party</li>
</ul></li>
</ol>
<h3 id="algorithm">Algorithm</h3>
<ul>
<li>Token bucket</li>
<li>Leaking bucket</li>
<li>Fixed window counter</li>
<li>sliding window log</li>
<li>Sliding window counter</li>
</ul>
<h1 id="resource">Resource</h1>
<ul>
<li><a href="https://www.youtube.com/watch?v=FU4WlwfS3G0" target="_blank" rel="noopener">Good video</a>
<ul>
<li>Need to review again to get deeper</li>
</ul></li>
<li><a href="http://blog.gssxgss.me/not-a-simple-problem-rate-limiting/" target="_blank" rel="noopener">Code for TokenBucket</a></li>
<li><a href="https://www.jiuzhang.com/article/info/?isPreview=false&amp;shortUrl=H0hJlI" target="_blank" rel="noopener">九章算法</a></li>
</ul>
]]></content>
      <categories>
        <category>System Design</category>
      </categories>
  </entry>
  <entry>
    <title>system design</title>
    <url>/SD-systemDesign.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="4d729f05c40af486792e07e0f89a49b1be4f0bedcc567ce49f1b2f56e3146998">27c5370ec477f4ada4932eeedba6a890d056c9a86c02a59eef5ff39fad66e2ce0860247038649bc190974f2bfcc937d4471c899aa93dbfc419375fd684f6f9184827c02378e5e566c20c57eaea15e9de41e7c0d1220fa70ba2d0b91d3f649938292dea2c144e078e5f67893a7bae602a949a950eb2af633d3a116680ab19981016aaf9a420554274700cdcc74476cbc970437d2c852580617791230aef8a4026e895cf6f1bb7adcdb731c6bf88f3efc9b23c6fa041490f00dd1142aa4178d05ce38aaee03fd7cc55840b5add786c6e48b30fbeb0de46191d9f5efd04751b556f621c338b06acf67c2a7e35bbe271dcc2bc518d0c30f3a5d12fdfddc604eb8961709b0637bc66a65fc3ad6876ade67a859df0ae8ad150f97d2a1955e425395c40554bc31810d2081410d1434b5672a244de3bd5936ac3c35888f767807101f81db13fd55ccc3f07d23efae85e11965184d3c3f69c1b187c4337db75ed618c9f895300b06301147ef1a567ffc33799a9df22a590eb157306ad54cbd2daf40e2881b568bf5b3c1252833b5903805cc8a4de4f93299db817f189f284285e09a5851ada23eed1e8e80d35a85f9c88ecd4fe881d1048a860f12d654dd98cad98792a89ee5e95d7d9daadaedc35ebfe1e1883f37ec92225ae589315ed751c0cf819da97e3974cf6744b975a3cb26b4095555d107b8864856fc88ec844cc98866d9c0f0c78c60374df62aa3dbef05ccdf1a49c3f747fec1ff3dfb552645b051b55adef330f88eb1869aefd79c4c089205360c72023fc87290f8d009285683309b26cdbe8</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 這裡需要密碼.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>System Design</category>
      </categories>
      <tags>
        <tag>secret</tag>
      </tags>
  </entry>
  <entry>
    <title>LC-25 Reverse Nodes in k-Group</title>
    <url>/LC-25.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="e96ca93d89a822fac626a71fde68d6b6586737be2e36ecc240ee6efde3ab5243">27c5370ec477f4ada4932eeedba6a8902255f9a2f5ac9881a96a61dedcb795af5167f38d7364b375499328d396ec21a5239cb0b13cd683dc6c9ef03b753ca8547dc2795ccaf147ee60e9d4d70be93d8076dafef0a69364291105542f4d7c01244767bf68bc9d33e6bba8c693a06fbec260dcb8da0fb1e4e0f758c0218f5591d05f9ec475bd7411e8cf59672bbb83bf33d5f0affce615c740a6d61e4329fec593</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 這裡需要密碼.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>LC</category>
      </categories>
      <tags>
        <tag>secret</tag>
      </tags>
  </entry>
  <entry>
    <title>Process</title>
    <url>/OS-process.html</url>
    <content><![CDATA[<h1 id="includes">Includes:</h1>
<ul>
<li><a href="#os">OS</a></li>
<li><a href="#kernel">Kernel</a></li>
<li><a href="#process">Process:</a></li>
<li><a href="#pcb-and-context-switch">PCB and context switch</a></li>
<li><a href="#scheduler">Scheduler</a></li>
<li><a href="#ipc">IPC</a></li>
</ul>
<a id="more"></a>
<h1 id="os">OS</h1>
<ul>
<li>OS is software to abstract(simplify) and arbitrate(control) HW system</li>
<li>like toy shop manager - resource management, policy, mitigate</li>
</ul>
<figure>
<img src="OS_element.png" alt="" /><figcaption>OS element: abstraction, mechanism, policy</figcaption>
</figure>
<h1 id="kernel">Kernel</h1>
<figure>
<img src="kernal_1.png" alt="" /><figcaption>distiguish computer platform as 2 level</figcaption>
</figure>
<figure>
<img src="kernal_2.png" alt="" /><figcaption>application needs OS to support HW access</figcaption>
</figure>
<figure>
<img src="kernel_3.png" alt="" /><figcaption>System flow call ex: user process calls OS then return back to user</figcaption>
</figure>
<h1 id="process">Process</h1>
<ul>
<li>Process is instance of executing program</li>
<li>like an order of toys</li>
</ul>
<p><img src="process_1.png" /> <img src="process_2.png" alt="process has virtual addr" /></p>
<figure>
<img src="process_3.png" alt="" /><figcaption>page table mapps virtual addr to hysical addr</figcaption>
</figure>
<figure>
<img src="process_4.png" alt="" /><figcaption>some physical addr is in the disk</figcaption>
</figure>
<h1 id="pcb-and-context-switch">PCB and context switch</h1>
<ul>
<li>PCB has state of execution(program counter, stack), tmp holding area (mm), might require some HW (io device)</li>
<li>process control block (PCB) includes:
<ol type="1">
<li>program counter (pc) - current step of the process (binary)</li>
<li>stack pointer</li>
</ol></li>
<li>Context switch: when 2 or more process switch for CPU (ex: p1 switch to p2), it need to record the stopping point for current process(p1) and also upload the stopping point for incoming process(p2)</li>
</ul>
<p><img src="pcb_1.png" /> <img src="pcb_2.png" /> <img src="pcb_3.png" /> <img src="pcb_4.png" /></p>
<h1 id="scheduler">Scheduler</h1>
<p><img src="scheduler_1.png" /> <img src="scheduler_2.png" alt="the smaller time scheduler takes, higher CPU efficientcy" /></p>
<figure>
<img src="IO.png" alt="" /><figcaption>scheduler taks next process from ready queue</figcaption>
</figure>
<h1 id="ipc">IPC</h1>
<ul>
<li>Inter Process Communication <img src="ipc_1.png" /> <img src="ipc_2.png" /> <img src="ipc_3.png" /></li>
</ul>
]]></content>
      <categories>
        <category>OS</category>
      </categories>
  </entry>
  <entry>
    <title>C code</title>
    <url>/c-code.html</url>
    <content><![CDATA[<p>C practice</p>
<a id="more"></a>
<ul>
<li><a href="https://leetcode.com/problems/fibonacci-number/" target="_blank" rel="noopener">509 - Fibonacci Number</a> array</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fib</span><span class="params">(<span class="keyword">int</span> N)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = fib(<span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"res is %d\n"</span>, res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// approach 1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fib</span><span class="params">(<span class="keyword">int</span> N)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (N &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> N;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> lib[N + <span class="number">1</span>];</span><br><span class="line">    lib[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    lib[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        lib[i] = lib[i - <span class="number">1</span>] + lib[i - <span class="number">2</span>];</span><br><span class="line">    &#125;        </span><br><span class="line">    <span class="keyword">return</span> lib[N];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// approach 2</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fib2</span><span class="params">(<span class="keyword">int</span> N)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (N &lt;= <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> N;</span><br><span class="line">    <span class="keyword">return</span> fib(N - <span class="number">1</span>) + fib(N - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://leetcode.com/problems/string-to-integer-atoi/" target="_blank" rel="noopener">8. String to Integer (atoi)</a> math, string</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(<span class="keyword">char</span> * str)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = myAtoi(<span class="string">"   42  "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"res is %d\n"</span>, res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(<span class="keyword">char</span> * str)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, sign = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (str[i] == <span class="string">' '</span>) &#123;</span><br><span class="line">        i += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (str[i] == <span class="string">'+'</span>)</span><br><span class="line">        i += <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (str[i] == <span class="string">'-'</span>) &#123;</span><br><span class="line">        i += <span class="number">1</span>;</span><br><span class="line">        sign = <span class="number">-1</span>;        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(str[i])) &#123;</span><br><span class="line">        res = res * <span class="number">10</span> + str[i] - <span class="string">'0'</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (sign * res &gt;= <span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">31</span>) - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">31</span>) - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sign * res &lt;= <span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">31</span>) * (<span class="number">-1</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">31</span>) * (<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        i += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">int</span>)res * sign;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://leetcode.com/problems/number-of-1-bits/" target="_blank" rel="noopener">191. Number of 1 Bits</a> bit operation <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">uint32_t</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        res += n &amp; <span class="number">1</span>;</span><br><span class="line">        n = n &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>LC</category>
      </categories>
  </entry>
  <entry>
    <title>Memory management</title>
    <url>/OS-MM.html</url>
    <content><![CDATA[<h2 id="memory-management">Memory Management:</h2>
<a id="more"></a>
<ul>
<li><a href="https://mropengate.blogspot.com/2015/01/operating-system-ch8-memory-management.html" target="_blank" rel="noopener">ref</a></li>
</ul>
<ol type="1">
<li>Address binding:
<ul>
<li>Compile time addr binding: compiler knows the absolute address</li>
<li>Load time addr binding: relative addr</li>
<li>Execution time addr binding: move addr</li>
</ul></li>
<li>Dynamic loading: programmer decides</li>
<li>Dynamic linking: load the func into memory when be called</li>
<li>Overlays: if func1, func2 are exclusive, no need to load them at the same time</li>
</ol>
]]></content>
      <categories>
        <category>OS</category>
      </categories>
  </entry>
  <entry>
    <title>test</title>
    <url>/test.html</url>
    <content><![CDATA[<p>This is a test :)</p>
<a id="more"></a>
<p>hidden:</p>
<ul>
<li>ref:
<ul>
<li><a href="https://allen108108.github.io/blog/2019/10/07/%E4%BD%BF%E7%94%A8%20Github%20page%20%E8%A3%BD%E4%BD%9C%E5%80%8B%E4%BA%BA%E7%B6%B2%E7%AB%99%20%E2%80%93%20%E4%BB%A5%20Hexo%20_%20Next%20%E8%A3%BD%E4%BD%9C%E9%83%A8%E8%90%BD%E6%A0%BC/" target="_blank" rel="noopener">template</a></li>
<li><a href="https://en.wikibooks.org/wiki/LaTeX/Mathematics" target="_blank" rel="noopener">LaTex</a></li>
<li><a href="https://gist.github.com/christech1117/6dc5221c177104990767d6490ad8c7ba" target="_blank" rel="noopener">MD</a></li>
</ul></li>
<li>plot:
<ul>
<li><img src="test1.png" /></li>
</ul></li>
<li>LaTex</li>
</ul>
<p><span class="math display">\[
\frac{|ax + by + c|}{\sqrt{a^{2}+b^{2}}}
\]</span> <span class="math display">\[
|a|&lt;1
\]</span></p>
<p><span class="math display">\[\begin{equation}\label{eq1}
e=mc^2
\end{equation}\]</span></p>
<p><span class="math display">\[
1=\sum_{i=0}^{m}\sum_{k=0}^{W_i-1}b_{i,k}=\sum_{i=0}^{m}b_{i,0}\sum_{k=0}^{W_i-1}\frac{W_i-k}{W_i}=\sum_{i=0}^{m}b_{i,0}\frac{W_i+1}{2}\\
=\frac{b_{0,0}}{2}\left[W\left(\sum_{i=0}^{m-1}(2p)^i+\frac{(2p)^m}{1-p}\right) + \frac{1}{1-p}\right]
\]</span></p>
<p><span class="math display">\[
\cos (2\theta) = \cos^2 \theta - \sin^2 \theta
\]</span> <span class="math display">\[
\forall x \in X, \quad \exists y \leq \epsilon
\]</span></p>
]]></content>
      <categories>
        <category>test</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/HexoCMD.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="quick-start">Quick Start</h2>
<h3 id="create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
